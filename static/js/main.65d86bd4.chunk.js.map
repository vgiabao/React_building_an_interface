{"version":3,"sources":["components/AddApointments.js","components/ListAppointments.js","components/SearchAppointment.js","components/App.js","serviceWorker.js","index.js"],"names":["AddApointments","state","petName","ownerName","aptDate","aptTime","aptNotes","handleChange","bind","handleAdd","e","target","value","name","this","setState","preventDefault","tempApt","props","addApointment","toggleForm","className","formDisplay","onClick","id","noValidate","onSubmit","htmlFor","readOnly","type","placeholder","onChange","rows","cols","Component","ListAppointments","appointments","map","item","key","index","deleteAppointment","contentEditable","suppressContentEditableWarning","onBlur","updateInfor","innerText","date","parse","format","SearchAppointment","aria-label","searchApts","data-toggle","aria-haspopup","aria-expanded","orderBy","href","changeOrder","orderDir","role","App","myAppointments","lastIndex","queryText","apt","tempApts","push","without","fetch","then","responsoe","json","result","apts","order","dir","query","findIndex","filterApts","sort","a","b","toLowerCase","filter","includes","toLocaleLowerCase","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.65d86bd4.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { FaPlus } from \"react-icons/fa\";\r\nexport default class AddApointments extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      petName: \"\",\r\n      ownerName: \"\",\r\n      aptDate: \"\",\r\n      aptTime: \"\",\r\n      aptNotes: \"\"\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleAdd = this.handleAdd.bind(this);\r\n  }\r\n  handleChange(e) {\r\n    const target = e.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    this.setState({ [name]: value });\r\n  }\r\n  handleAdd(e) {\r\n    e.preventDefault();\r\n    let tempApt = {\r\n      petName: this.state.petName,\r\n      ownerName: this.state.ownerName,\r\n      aptDate: this.state.aptDate + \" \" + this.state.aptTime,\r\n      aptNotes: this.state.aptNotes\r\n    };\r\n    this.props.addApointment(tempApt);\r\n    this.setState({\r\n      petName: \"\",\r\n      ownerName: \"\",\r\n      aptDate: \"\",\r\n      aptTime: \"\",\r\n      aptNotes: \"\"\r\n    });\r\n    this.props.toggleForm();\r\n  }\r\n  render() {\r\n    return (\r\n      <div\r\n        className={\r\n          \"card textcenter mt-3\" +\r\n          (this.props.formDisplay ? \"\" : \" add-appointment\")\r\n        }\r\n      >\r\n        <div\r\n          className=\"apt-addheading card-header bg-primary text-white\"\r\n          onClick={this.props.toggleForm}\r\n        >\r\n          <FaPlus /> Add Appointment\r\n        </div>\r\n\r\n        <div className=\"card-body\">\r\n          <form id=\"aptForm\" noValidate onSubmit={this.handleAdd}>\r\n            <div className=\"form-group form-row\">\r\n              <label\r\n                className=\"col-md-2 col-form-label text-md-right\"\r\n                htmlFor=\"petName\"\r\n                readOnly\r\n              >\r\n                Pet Name\r\n              </label>\r\n              <div className=\"col-md-10\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"petName\"\r\n                  placeholder=\"Pet's Name\"\r\n                  value={this.state.petName}\r\n                  onChange={this.handleChange}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-group form-row\">\r\n              <label\r\n                className=\"col-md-2 col-form-label text-md-right\"\r\n                htmlFor=\"ownerName\"\r\n              >\r\n                Pet Owner\r\n              </label>\r\n              <div className=\"col-md-10\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"ownerName\"\r\n                  placeholder=\"Owner's Name\"\r\n                  value={this.state.ownerName}\r\n                  onChange={this.handleChange}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-group form-row\">\r\n              <label\r\n                className=\"col-md-2 col-form-label text-md-right\"\r\n                htmlFor=\"aptDate\"\r\n              >\r\n                Date\r\n              </label>\r\n              <div className=\"col-md-4\">\r\n                <input\r\n                  type=\"date\"\r\n                  className=\"form-control\"\r\n                  name=\"aptDate\"\r\n                  id=\"aptDate\"\r\n                  value={this.state.aptDate}\r\n                  onChange={this.handleChange}\r\n                />\r\n              </div>\r\n              <label\r\n                className=\"col-md-2 col-form-label text-md-right\"\r\n                htmlFor=\"aptTime\"\r\n              >\r\n                Time\r\n              </label>\r\n              <div className=\"col-md-4\">\r\n                <input\r\n                  type=\"time\"\r\n                  className=\"form-control\"\r\n                  name=\"aptTime\"\r\n                  id=\"aptTime\"\r\n                  value={this.state.aptTime}\r\n                  onChange={this.handleChange}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-group form-row\">\r\n              <label className=\"col-md-2 text-md-right\" htmlFor=\"aptNotes\">\r\n                Apt. Notes\r\n              </label>\r\n              <div className=\"col-md-10\">\r\n                <textarea\r\n                  className=\"form-control\"\r\n                  rows=\"4\"\r\n                  cols=\"50\"\r\n                  name=\"aptNotes\"\r\n                  id=\"aptNotes\"\r\n                  placeholder=\"Appointment Notes\"\r\n                  value={this.state.aptNotes}\r\n                  onChange={this.handleChange}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-group form-row mb-0\">\r\n              <div className=\"offset-md-2 col-md-10\">\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary d-block ml-auto\"\r\n                >\r\n                  Add Appointment\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { FaAppStore } from \"react-icons/fa\";\r\nimport Moment from \"react-moment\";\r\nexport default class ListAppointments extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"appointment-list item-list mb-3\">\r\n        {this.props.appointments.map(item => (\r\n          <div className=\"pet-item col media py-3\" key={item.index}>\r\n            <div className=\"mr-3\">\r\n              <button\r\n                className=\"pet-delete btn btn-sm btn-danger\"\r\n                onClick={() => this.props.deleteAppointment(item)}\r\n              >\r\n                <FaAppStore />\r\n              </button>\r\n            </div>\r\n            <div className=\"pet-info media-body\">\r\n              <div className=\"pet-head d-flex\">\r\n                <span\r\n                  className=\"pet-name\"\r\n                  contentEditable\r\n                  suppressContentEditableWarning\r\n                  onBlur={e =>\r\n                    this.props.updateInfor(\r\n                      \"petName\",\r\n                      e.target.innerText,\r\n                      item.index\r\n                    )\r\n                  }\r\n                >\r\n                  {item.petName}\r\n                </span>\r\n                <span className=\"apt-date ml-auto\">\r\n                  <Moment\r\n                    date={item.aptDate}\r\n                    parse=\"YYYY-MM-dd hh:mm\"\r\n                    format=\"MMM-D h:mma\"\r\n                  />\r\n                </span>\r\n              </div>\r\n\r\n              <div className=\"owner-name\">\r\n                <span className=\"label-item\">Owner:</span>\r\n                <span\r\n                  contentEditable\r\n                  suppressContentEditableWarning\r\n                  onBlur={e =>\r\n                    this.props.updateInfor(\r\n                      \"ownerName\",\r\n                      e.target.innerText,\r\n                      item.index\r\n                    )\r\n                  }\r\n                >\r\n                  {item.ownerName}\r\n                </span>\r\n              </div>\r\n              <div\r\n                className=\"apt-notes\"\r\n                contentEditable\r\n                suppressContentEditableWarning\r\n                onBlur={e =>\r\n                  this.props.updateInfor(\r\n                    \"aptNotes\",\r\n                    e.target.innerText,\r\n                    item.index\r\n                  )\r\n                }\r\n              >\r\n                {item.aptNotes}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class SearchAppointment extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"search-appointments row justify-content-center my-4\">\r\n        <div className=\"col-md-6\">\r\n          <div className=\"input-group\">\r\n            <input\r\n              id=\"SearchApts\"\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              aria-label=\"Search Appointments\"\r\n              onChange={e => this.props.searchApts(e.target.value)}\r\n            />\r\n            <div className=\"input-group-append\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-primary dropdown-toggle\"\r\n                data-toggle=\"dropdown\"\r\n                aria-haspopup=\"true\"\r\n                aria-expanded=\"false\"\r\n              >\r\n                Sort by: <span className=\"caret\" />\r\n              </button>\r\n\r\n              <div className=\"sort-menu dropdown-menu dropdown-menu-right\">\r\n                <button\r\n                  className={\r\n                    \"sort-by dropdown-item \" +\r\n                    (this.props.orderBy === \"petName\" ? \"active\" : \"\")\r\n                  }\r\n                  href=\"#\"\r\n                  onClick={e =>\r\n                    this.props.changeOrder(\"petName\", this.props.orderDir)\r\n                  }\r\n                >\r\n                  Pet Name\r\n                </button>\r\n                <button\r\n                  className={\r\n                    \"sort-by dropdown-item \" +\r\n                    (this.props.orderBy === \"aptDate\" ? \"active\" : \"\")\r\n                  }\r\n                  href=\"#\"\r\n                  onClick={e =>\r\n                    this.props.changeOrder(\"aptDate\", this.props.orderDir)\r\n                  }\r\n                >\r\n                  Date\r\n                </button>\r\n                <button\r\n                  className={\r\n                    \"sort-by dropdown-item \" +\r\n                    (this.props.orderBy === \"ownerName\" ? \"active\" : \"\")\r\n                  }\r\n                  href=\"#\"\r\n                  onClick={e =>\r\n                    this.props.changeOrder(\"ownerName\", this.props.orderDir)\r\n                  }\r\n                >\r\n                  Owner\r\n                </button>\r\n                <div role=\"separator\" className=\"dropdown-divider\" />\r\n                <button\r\n                  className={\r\n                    \"sort-by dropdown-item \" +\r\n                    (this.props.orderDir === \"asc\" ? \"active\" : \"\")\r\n                  }\r\n                  href=\"#\"\r\n                  onClick={e =>\r\n                    this.props.changeOrder(this.props.orderBy, \"asc\")\r\n                  }\r\n                >\r\n                  Asc\r\n                </button>\r\n                <button\r\n                  className={\r\n                    \"sort-by dropdown-item \" +\r\n                    (this.props.orderDir === \"desc\" ? \"active\" : \"\")\r\n                  }\r\n                  href=\"#\"\r\n                  onClick={e =>\r\n                    this.props.changeOrder(this.props.orderBy, \"desc\")\r\n                  }\r\n                >\r\n                  Desc\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\nimport \"../css/App.css\";\nimport AddAppointments from \"./AddApointments\";\nimport ListAppointments from \"./ListAppointments\";\nimport SearchAppointment from \"./SearchAppointment\";\nimport { without, findIndex } from \"lodash\";\nexport default class App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      myAppointments: [],\n      lastIndex: 0,\n      formDisplay: true,\n      orderBy: \"petName\",\n      queryText: \"\",\n      orderDir: \"asc\"\n    };\n    this.deleteAppointment = this.deleteAppointment.bind(this);\n    this.toggleForm = this.toggleForm.bind(this);\n    this.addApointment = this.addApointment.bind(this);\n    this.changeOrder = this.changeOrder.bind(this);\n    this.searchApts = this.searchApts.bind(this);\n    this.updateInfor = this.updateInfor.bind(this);\n  }\n\n  toggleForm() {\n    this.setState({\n      formDisplay: !this.state.formDisplay\n    });\n  }\n  addApointment(apt) {\n    let tempApts = this.state.myAppointments;\n    apt.index = this.state.lastIndex;\n    tempApts.push(apt);\n    this.setState({\n      myAppointments: tempApts,\n      lastIndex: this.state.lastIndex + 1\n    });\n  }\n  deleteAppointment(apt) {\n    let tempApts = this.state.myAppointments;\n    tempApts = without(tempApts, apt);\n    this.setState({ myAppointments: tempApts });\n  }\n  componentDidMount() {\n    fetch(\"./data.json\")\n      .then(responsoe => responsoe.json())\n      .then(result => {\n        const apts = result.map(item => {\n          item.index = this.state.lastIndex;\n          this.setState({ lastIndex: this.state.lastIndex + 1 });\n          return item;\n        });\n        this.setState({ myAppointments: apts });\n      });\n  }\n  changeOrder(order, dir) {\n    this.setState({\n      orderBy: order,\n      orderDir: dir\n    });\n  }\n  searchApts(query) {\n    this.setState({\n      queryText: query\n    });\n  }\n  updateInfor(name, value, id) {\n    let tempApts = this.state.myAppointments;\n    let aptIndex = findIndex(this.state.myAppointments, {\n      index: id\n    });\n    tempApts[aptIndex][name] = value;\n    this.setState({\n      myAppointments: tempApts\n    });\n  }\n  render() {\n    let order;\n    let filterApts = this.state.myAppointments;\n    if (this.state.orderDir === \"asc\") {\n      order = 1;\n    } else {\n      order = -1;\n    }\n\n    filterApts = filterApts\n      .sort((a, b) => {\n        if (\n          a[this.state.orderBy].toLowerCase() <\n          b[this.state.orderBy].toLowerCase()\n        ) {\n          return -1 * order;\n        } else {\n          return 1 * order;\n        }\n      })\n      .filter(item => {\n        if (\n          item[\"petName\"]\n            .toLowerCase()\n            .includes(this.state.queryText.toLocaleLowerCase()) ||\n          item[\"ownerName\"]\n            .toLowerCase()\n            .includes(this.state.queryText.toLocaleLowerCase()) ||\n          item[\"aptNotes\"]\n            .toLowerCase()\n            .includes(this.state.queryText.toLocaleLowerCase())\n        ) {\n          return item;\n        }\n      });\n    return (\n      <main className=\"page bg-white\" id=\"petratings\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12 bg-white\">\n              <div className=\"container\">\n                <AddAppointments\n                  formDisplay={this.state.formDisplay}\n                  toggleForm={this.toggleForm}\n                  addApointment={this.addApointment}\n                />\n                <SearchAppointment\n                  orderBy={this.state.orderBy}\n                  orderDir={this.state.orderDir}\n                  changeOrder={this.changeOrder}\n                  searchApts={this.searchApts}\n                />\n\n                <ListAppointments\n                  appointments={filterApts}\n                  deleteAppointment={this.deleteAppointment}\n                  updateInfor={this.updateInfor}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </main>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./css/index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"jquery/dist/jquery.js\";\nimport \"popper.js/dist/umd/popper.js\";\nimport \"bootstrap/dist/js/bootstrap.js\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}